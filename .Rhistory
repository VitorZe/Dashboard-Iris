df
str(df)
df$N_Clinic <- as.double(df$N_Clinic)
class(df$N_Clinic)
EstudosUnicos <- janitor::tabyl(df$AutorAno)
EstudosUnicos |> arrange(desc(n))
sum(df |> distinct(df$AutorAno) != 0)
ma_geral <- metacont(df$N_Clinic, df$M_Clinic, df$SD_Clinic,
df$N_Control, df$M_Control, df$SD_Control,
paste(df$AutorAno),
data = df,
random = T,
method.tau = "DL")
ma_geral
ma_geral <- metacont(df$N_Clinic, df$M_Clinic, df$SD_Clinic,
df$N_Control, df$M_Control, df$SD_Control,
paste(df$AutorAno),
data = df,
fixed = F,
method.tau = "DL",
sm = "SMD")
ma_geral
png("forest_testeTentativa.png")
forest(ma_geral, fontsize = 20, spacing = 2)
dev.off()
ma_geral <- metacont(df$N_Clinic, df$M_Clinic, df$SD_Clinic,
df$N_Control, df$M_Control, df$SD_Control,
paste(df$AutorAno),
data = df,
fixed = F,
method.tau = "DL",
sm = "SMD")
ma_geral
ma_geral <- metacont(df$N_Clinic, df$M_Clinic, df$SD_Clinic,
df$N_Control, df$M_Control, df$SD_Control,
paste(df$AutorAno),
data = df,
fixed = F,
method.tau = "DL",
sm = "SMD")
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
label.e = "Substance Use", label.c = "Healthy Control",
label.left = "Substance User deficit",
label.right = "Healthy Controls deficit",
digits = 2L,
fontsize = 20,
spacing = 2,
col = "blue",
test.overall = TRUE ## <- traz os valores do Qui² no plot
)
ma_geral <- metacont(df$N_Clinic, df$M_Clinic, df$SD_Clinic,
df$N_Control, df$M_Control, df$SD_Control,
paste(df$AutorAno),
data = df,
fixed = F,
method.tau = "DL",
sm = "SMD")
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", #col.diamond = "black",
digits.se = 2,
label.e = "Substance Use", label.c = "Healthy Control",
label.left = "Substance User deficit",
label.right = "Healthy Controls deficit",
digits = 2L,
fontsize = 20,
spacing = 2,
col = "blue",
test.overall = TRUE ## <- traz os valores do Qui² no plot
)
ma_geral <- metacont(df$N_Clinic, df$M_Clinic, df$SD_Clinic,
df$N_Control, df$M_Control, df$SD_Control,
paste(df$AutorAno),
data = df,
fixed = F,
method.tau = "DL",
sm = "SMD")
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", #col.diamond = "black",
#digits.se = 2,
label.e = "Substance Use", label.c = "Healthy Control",
label.left = "Substance User deficit",
label.right = "Healthy Controls deficit",
digits = 2L,
fontsize = 20,
spacing = 2,
col = "blue",
test.overall = TRUE ## <- traz os valores do Qui² no plot
)
ma_geral <- metacont(df$N_Clinic, df$M_Clinic, df$SD_Clinic,
df$N_Control, df$M_Control, df$SD_Control,
paste(df$AutorAno),
data = df,
fixed = F,
method.tau = "DL",
sm = "SMD")
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", #col.diamond = "black",
#digits.se = 2,
label.e = "Substance Use", label.c = "Healthy Control",
label.left = "Substance User deficit",
label.right = "Healthy Controls deficit",
digits = 2L,
fontsize = 20,
spacing = 2,
col = "blue",
test.overall = TRUE ## <- traz os valores do Qui² no plot
)
forest(ma_geral)
forest(ma_geral,
label = T)
forest(ma_geral,
label = T,
col.square = "#77CC5C")
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C")
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
label.e = "Substance Users", label.c = "Healthy Control"
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC Deficit",
digits = "2L",
fontsize = 20,
sacing = 2,
col = "blue",
teste.overall = T #<- traz valores do teste Q no plot
)
{r fig.height = 20, fig.width = 15.5}
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
label.e = "Substance Users", label.c = "Healthy Control"
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU Deficit"
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit"
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
fontsize = 20
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
fontsize = 20,
spacing = 2
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 20, spacing = 2, digits = 2
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 20, spacing = 2, digits.sd = 2
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 20, spacing = 1.5, digits.sd = 2
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 20, spacing = 1.5, digits.sd = 2
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 20, spacing = 1.5, digits.sd = 2
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 20, spacing = 1.5, digits.sd = 2
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 20, spacing = 1.5, digits.sd = 2,
test.overall = T
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 20, spacing = 1.5, digits.sd = 2,
test.overall = T
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "#77CC5C", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 20, spacing = 1.5, digits.sd = 2,
)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(psych)
library(haven)
df <- read.csv("C:/Users/Ze_Vito/Documents/1.Progreams/RStudio/PredictAcademicSuccess/data_trad.csv", sep = ',')
describe(df)
#Scatterplot - Nota de Admissão
ggplot (df, aes(x=Admission.grade,y=Age.at.enrollment)) +
geom_point(aes(color=Target), alpha=0.7)
#Violin y Boxplot - Idade
ggplot (df, aes(x=Target, y=Age.at.enrollment, fill = Target)) +
geom_violin(alpha = .5) + geom_boxplot(width = .07, alpha = .7)
#Violin y Boxplot - Idade
ggplot (df, aes(x=Target, y=Age.at.enrollment, fill = Target)) +
geom_violin(alpha = .5) + geom_boxplot(width = .07, alpha = .7) +
theme_light()
#Boxplot - Nota de admissão
ggplot(df, aes(x=Scholarship.holder, y=Admission.grade, fill = Scholarship.holder)) +
geom_violin(alpha = .4) + geom_boxplot(width = .07, alpha = .7) +
theme_classic() + scale_y_continuous(breaks=seq(0,200,by=25))+
theme (
axis.line.x = element_blank()
)
ggplot(df, aes(x=as.factor(GDP)) +
geom_bar(fill='steelblue')
ggplot(df, aes(x=as.factor(GDP)) +
ggplot(df, aes(x=as.factor(GDP)) +
geom_bar(fill='steelblue')
ggplot(df, aes(x=as.factor(GDP)) +
ggplot(df, aes(x=as.factor(GDP)) +
geom_bar(fill='steelblue')
ggplot(df, aes(x=as.factor(GDP)) +
ggplot(df, aes(x=as.factor(GDP)) +
geom_bar(fill='steelblue')
ggplot(df, aes(x=as.factor(GDP)) +
ggplot(df, aes(x=as.factor(GDP)) +
geom_bar(fill='steelblue')
ggplot(df, aes(x=as.factor(GDP)) +
ggplot(df, aes(x=as.factor(GDP)) +
geom_bar(fill='steelblue')
t.test (subset(df, Scholarship.holder == "Sim", select = Admission.grade), subset(df, Scholarship.holder == "Não", select = Admission.grade))
describe(df$Admission.grade)
t.test (subset(df, Scholarship.holder == "Sim", select = Admission.grade), subset(df, Scholarship.holder == "Não", select = Admission.grade))
#Histograma - PIB
ggplot(df, aes(x=as.factor(GDP)) +
geom_bar(fill='steelblue')
#Dotplot
ggplot(df, aes(x=GDP) +
geom_histogram(fill='steelblue')
#Histograma - PIB
ggplot(df, aes(x=GDP) +
ggplot(df, aes(x=GDP) +
geom_histogram(fill='steelblue')
#Boxplot - Nota de admissão
ggplot(df, aes(x=Scholarship.holder, y=Admission.grade, fill = Scholarship.holder)) +
geom_violin(alpha = .4) + geom_boxplot(width = .07, alpha = .7) +
theme_classic() + scale_y_continuous(breaks=seq(0,200,by=25))+
theme (
axis.line.x = element_blank()
)
ggplot(df, aes(x=GDP) +
geom_histogram(fill='steelblue')
head(df)
ggplot(df, aes = (Target)) +
geom_bar()
ggplot(df, aes = (x = Target)) +
geom_bar()
df %>%
ggplot(df, aes = (x = Target, y = count(Target))) +
ggplot(df, aes = (x = Target, y = df |> count(Target))) +
ggplot(df, aes (x = Target, y = df |> count(Target) )) +
geom_bar()
ggplot(df, aes (x = Target) +
geom_bar()
ggplot(df, aes (x = Target)) +
geom_bar()
ggplot(df, aes (x = Target, fill = Target)) +
geom_bar()
ggplot (df, aes(x = admission.grade, fill = Target)) +
geom_boxplot + geom_violin()
ggplot (df, aes(x = admission.grade, fill = Target)) +
geom_boxplot() + geom_violin()
ggplot (df, aes(x = Admission.grade, fill = Target)) +
geom_boxplot() + geom_violin()
ggplot (df, aes(x = Admission.grade, y = Target, fill = Target)) +
geom_boxplot() + geom_violin()
ggplot (df, aes(x = Target, y = Admission.grade, fill = Target)) +
geom_boxplot(width = .7) + geom_violin(alpha = .5)
ggplot (df, aes(x = Target, y = Admission.grade, fill = Target)) +
geom_boxplot(width = .5) + geom_violin(alpha = .5)
ggplot (df, aes(x = Target, y = Admission.grade, fill = Target)) +
geom_violin(alpha = .5) + geom_boxplot(width = .3, alpha = .5)
ggplot (df, aes(x = Target, y = Admission.grade, fill = Target)) +
geom_violin(alpha = .5) + geom_boxplot(width = .3, alpha = .5) +
theme_linedraw()
ggplot (df, aes(x = Target, y = Admission.grade, fill = Target)) +
geom_violin(alpha = .5) + geom_boxplot(width = .3, alpha = .5) +
theme_light()
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "steelblue", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 20, spacing = 1.5, digits.sd = 2,
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "steelblue", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 24, spacing = 1.5, digits.sd = 2,
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
label = T,
col.square = "steelblue", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 24, spacing = 2, digits.sd = 2,
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
layout = "RevMan5"
label = T,
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
layout = "RevMan5",
label = T,
col.square = "steelblue", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 24, spacing = 2, digits.sd = 2,
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
layout = "RevMan5",
label = T,
col.square = "steelblue", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 20, spacing = 2, digits.sd = 2,
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
layout = "JAMA",
label = T,
col.square = "steelblue", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 20, spacing = 2, digits.sd = 2,
)
forest(ma_geral,
#layout = "RevMan5", #RevMan5, JAMA,
layout = "JAMA",
label = T,
col.square = "steelblue", col.diamond = "black",
digits.se = 2,
#rotulos
label.e = "Substance Users", label.c = "Healthy Control",
label.left = "SU deficit", label.right = "HC deficit",
#Texto
fontsize = 20, spacing = 2, digits.sd = 2,
)
shiny::runApp('1.Progreams/RStudio/Aprendes Shiny/PopularidadeNomesBebes')
runApp('1.Progreams/RStudio/Aprendes Shiny/Histograma/Numero de bins Hitograma.R')
runApp('1.Progreams/RStudio/Aprendes Shiny/IrisExploras')
runApp('1.Progreams/RStudio/Aprendes Shiny/PopularidadeNomesBebes')
runApp('1.Progreams/RStudio/Aprendes Shiny/PopularidadeNomesBebes')
runApp('1.Progreams/RStudio/Aprendes Shiny/IrisExploras')
runApp()
runApp('1.Progreams/RStudio/Aprendes Shiny/IrisExploras')
knitr::opts_chunk$set(echo = TRUE)
install.packages("penguins")
getwd()
install.packages("penguins")
library(meta) #Pra realizar a meta analise
library(haven) #analises descritivas
library(janitor)
library(psych) #+ analises descritivas
library(ggplot2) # visualização de dados
library(tidyverse) #Manipulação de dados
library(dplyr) #manipulação de dados
df <-  openxlsx::read.xlsx("C:/Users/Ze_Vito/Dropbox/1. Rev. Sistemática Mestrado/Dados derivados/Metanalise/Rev. Usuarios_Dados MetAnalise.xlsx")
df
runApp('1.Progreams/RStudio/Aprendes Shiny/IrisExploras')
runApp('1.Progreams/RStudio/Aprendes Shiny/IrisExploras')
runApp('1.Progreams/RStudio/Aprendes Shiny/Pinguins')
runApp('1.Progreams/RStudio/Aprendes Shiny/Pinguins')
runApp('1.Progreams/RStudio/Aprendes Shiny/Iris')
runApp('1.Progreams/RStudio/Aprendes Shiny/Pinguins')
runApp('1.Progreams/RStudio/Aprendes Shiny/Iris')
runApp('1.Progreams/RStudio/Aprendes Shiny/PopularidadeNomesBebes')
runApp('1.Progreams/RStudio/Aprendes Shiny/Histograma/Numero de bins Hitograma.R')
runApp('1.Progreams/RStudio/Aprendes Shiny/Pinguins')
runApp('1.Progreams/RStudio/Aprendes Shiny/Iris')
runApp('1.Progreams/RStudio/Aprendes Shiny/Iris')
